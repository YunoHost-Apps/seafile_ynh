#!/bin/bash

#=================================================
# GENERIC START
#=================================================

# Import common cmd
source ../settings/scripts/_common.sh

ynh_script_progression "Loading settings..."

#=================================================
# STANDARD RESTORATION STEPS
#=================================================

# Restore all config and data
ynh_script_progression "Restoring files..."
ynh_restore_everything
# Restore mysql dump
ynh_script_progression "Restoring database..."
ynh_''mysql_create_db ccnetdb "$db_user" "$db_pwd"
ynh_''mysql_create_db seahubdb "$db_user" "$db_pwd"
su -c "mysql -u ${app} -p$db_pwd $db_name < ${YNH_CWD}/seafiledb.dmp"
su -c "mysql -u ${app} -p$db_pwd ccnetdb < ${YNH_CWD}/ccnetdb.dmp"
su -c "mysql -u ${app} -p$db_pwd seahubdb < ${YNH_CWD}/seahubdb.dmp"

redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --app="$app" --key=redis_db --value="$redis_db"
ynh_config_add --jinja --template=seahub_settings.py --destination="$install_dir"/conf/seahub_settings.py

#=================================================

# Add logrotate
ynh_script_progression "Configuring log rotation..."
mkdir -p /var/log/"$app"
ynh_config_add_logrotate /var/log/"$app"

# Set all permissions
ynh_script_progression "Protecting directory..."
set_permission

# Enable service and start seafile
ynh_script_progression "Reconfiguring application..."
systemctl daemon-reload
systemctl enable "$app" --quiet
systemctl enable seahub --quiet
systemctl enable "$app"-notification --quiet
systemctl enable "$app-doc-server" --quiet
systemctl enable "$app-doc-converter" --quiet
if [ "$YNH_ARCH" != arm64 ]; then
    systemctl enable "$app-thumbnail" --quiet
fi

# Add Seafile to YunoHost's monitored services
ynh_script_progression "Register seafile service..."
yunohost service add "$app" --description 'Main service for seafile server.'
yunohost service add seahub --description 'Seafile server web interface.'
yunohost service add "$app"-notification --description 'Seafile client notification server.'
yunohost service add "$app-doc-server" --description='Seafile online collaborative document editor server.'
yunohost service add "$app-doc-converter" --description='Seafile online collaborative document editor converter.'
if [ "$YNH_ARCH" != arm64 ]; then
    yunohost service add "$app-thumbnail" --description='Server to create thumbnails for images, videos, PDFs and other file types.'
fi

ynh_script_progression "Reloading services..."

# Reload nginx
systemctl reload nginx.service

# Reload fail2ban
ynh_systemctl --service=fail2ban --action=reload

# Avoid the current effect
sleep 5

# Restart service
ynh_script_progression "Starting seafile services..."
ynh_systemctl --service="$app" --wait_until='Seafile server started' --log_path=systemd
sleep 2
ynh_systemctl --service=seahub --wait_until='Seahub is started' --log_path=systemd
ynh_systemctl --service="$app"-notification.service --wait_until="notification server started" --log_path=systemd
ynh_systemctl --service="$app"-doc-server.service --wait_until="server is serve on http://127.0.0.1" --log_path=systemd
ynh_systemctl --service="$app"-doc-converter.service --log_path=systemd
if [ "$YNH_ARCH" != arm64 ]; then
    ynh_systemctl --service="$app"-thumbnail.service --log_path=systemd
fi

ynh_script_progression "Restoration completed for $app"

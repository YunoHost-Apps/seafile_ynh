#!/bin/bash

#=================================================
# GENERIC START
#=================================================

# Import common cmd
source ./_common.sh

#=================================================

ynh_script_progression "Updating NGINX web server configuration..."
ynh_config_change_url_nginx

#=================================================
# SPECIFIC MODIFICATIONS
#=================================================

ynh_script_progression "Stoping services..."

# Stop service before any change
ynh_systemctl --service=seafile --action=stop
ynh_systemctl --service=seahub --action=stop
ynh_systemctl --service="$app"-notification.service --action=stop
ynh_systemctl --service="$app"-doc-server.service --action=stop
ynh_systemctl --service="$app"-doc-converter.service --action=stop
if [ "$YNH_ARCH" != arm64 ]; then
    ynh_systemctl --service="$app"-thumbnail.service --action=stop
fi
sleep 2
pkill -f seafile-controller || true
pkill -f seaf-server || true
pkill -f ccnet-server || true
pkill -f seahub || true

ynh_script_progression "Updating seafile configuration..."

# Update Seafile Config
ynh_config_add --jinja --template=seahub_settings.py --destination="$install_dir"/conf/seahub_settings.py
ynh_config_add --template=seafile.conf --destination="$install_dir"/conf/seafile.conf
ynh_config_add --template=gunicorn.conf.py --destination="$install_dir"/conf/gunicorn.conf.py
ynh_config_add --template=seafdav.conf --destination="$install_dir"/conf/seafdav.conf
ynh_config_add --template=seafevents.conf --destination="$install_dir"/conf/seafevents.conf
configure_env_files

# Update permissions
if [ "$old_domain" != "$domain" ]; then
    ynh_permission_url --permission=main --remove_url="$old_domain"/socket.io --add_url="$domain"/socket.io
fi
ynh_permission_url --permission=file_server --url="$domain"/seafhttp
ynh_permission_url --permission=webdav --url="$domain"/seafdav
ynh_permission_url --permission=notification --url="$domain"/notification

# Clean url in config in DB
clean_url_in_db_config

# Avoid the current effect
sleep 2

# Reload services
ynh_script_progression "Starting services..."
ynh_systemctl --service="$app" --wait_until='Seafile server started' --log_path=systemd
sleep 2
ynh_systemctl --service=seahub --wait_until='Seahub is started' --log_path=systemd
ynh_systemctl --service="$app"-notification.service --wait_until="notification server started" --log_path=systemd
ynh_systemctl --service="$app"-doc-server.service --wait_until="server is serve on http://127.0.0.1" --log_path=systemd
ynh_systemctl --service="$app"-doc-converter.service --log_path=systemd
if [ "$YNH_ARCH" != arm64 ]; then
    ynh_systemctl --service="$app"-thumbnail.service --log_path=systemd
fi

ynh_script_progression "Change of URL completed for $app" --time=
